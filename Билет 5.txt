Билет № 5.

1. Java 8. Stream<T> - что за интерфейс, какие виды методов бывают, назвать основные.
2. Exceptions – иерархия и отличия.
3. Spring – бины с одинаковыми именами, способы разрешения конфликта.

1. Stream API. Его задача - упростить работу с наборами данных, в частности, упростить операции фильтрации, сортировки и другие манипуляции с данными.
Вся основная функциональность данного API сосредоточена в пакете java.util.stream.

Одной из отличительных черт Stream API является применение лямбда-выражений, которые позволяют значительно сократить запись выполняемых действий.

1. Конвейерные — возвращают другой stream, то есть работают как builder,
2. Терминальные — возвращают другой объект, такой как коллекция, примитивы, объекты, Optional и т.д.

filter	Отфильтровывает записи, возвращает только записи, соответствующие условию
skip	Позволяет пропустить N первых элементов
distinct	Возвращает стрим без дубликатов (для метода equals)
map	Преобразует каждый элемент стрима
peek	Возвращает тот же стрим, но применяет функцию к каждому элементу стрима
limit	Позволяет ограничить выборку определенным количеством первых элементов
sorted	Позволяет сортировать значения либо в натуральном порядке, либо задавая Comparator

findFirst	Возвращает первый элемент из стрима (возвращает Optional)
findAny	Возвращает любой подходящий элемент из стрима (возвращает Optional)
collect	Представление результатов в виде коллекций и других структур данных
count	Возвращает количество элементов в стриме
anyMatch	Возвращает true, если условие выполняется хотя бы для одного элемента
noneMatch	Возвращает true, если условие не выполняется ни для одного элемента
allMatch	Возвращает true, если условие выполняется для всех элементов
min	Возвращает минимальный элемент, в качестве условия использует компаратор	
max	Возвращает максимальный элемент, в качестве условия использует компаратор
forEach	Применяет функцию к каждому объекту стрима, порядок при параллельном выполнении не гарантируется
forEachOrdered	Применяет функцию к каждому объекту стрима, сохранение порядка элементов гарантирует
toArray	Возвращает массив значений стрима
reduce	Позволяет выполнять агрегатные функции на всей коллекцией и возвращать один результат

2.  Исключения делятся на несколько классов, но все они имеют общего предка — класс Throwable. Его потомками являются подклассы Exception и Error.

В Java все исключения делятся на два типа: контролируемые исключения (checked) и неконтролируемые исключения (unchecked), 
к которым относятся ошибки (Errors) и исключения времени выполнения (RuntimeExceptions, потомок класса Exception).

Контролируемые исключения представляют собой ошибки, которые можно и нужно обрабатывать в программе, 
к этому типу относятся все потомки класса Exception (но не RuntimeException).

3. 
1. Использовать аннотацию @Qualifier, чтобы указать какую конкретно реализацию использовать.
2. Использовать аннотацию @Primary, чтобы по умолчанию всегда использовался бин с этой аннотацией. 
	Чтобы вызвать другой бин, надо это явно указать. Если указаны и @Qualifier, и @Primary, то у @Qualifier будет выше приоритет.
3.  Использовать @Autowire по названию поля. Тогда Spring будет использовать именно бин из @Autowired, 
	потому что название поля совпадает с продекларированным в @Component.