Билет № 2.

1. String, StringBuilder, StringBuffer. Примеры когда использование будет выгодным.
2. Устройство ArrayList, LinkedList, HashSet, HashMap – контракт equals(), hashcode().
3. JPA – что это такое, для чего используется.

1. Строка представляет собой последовательность символов. 
Для работы со строками в Java определен класс String, который предоставляет ряд методов для манипуляции строками. 
Физически объект String представляет собой ссылку на область в памяти, в которой размещены символы.

StringBuffer и StringBuilder классы которые позволяют создавать расширяемую строку, 
которую можно изменять без ущерба для производительности.

Эти классы похожи, практически двойники, они имеют одинаковые конструкторы, одни и те же методы, которые одинаково используются. 
Единственное их различие состоит в том, что класс StringBuffer синхронизированный и потокобезопасный. 
То есть класс StringBuffer удобнее использовать в многопоточных приложениях, 
где объект данного класса может меняться в различных потоках. 
Если же речь о многопоточных приложениях не идет, то лучше использовать класс StringBuilder, который не потокобезопасный, 
но при этом работает быстрее, чем StringBuffer в однопоточных приложениях.

2. ArrayList – это список, который очень похож на массив за исключением того, 
что он имеет произвольную длину и целый ряд методов, которые позволяют добавлять, удалять, 
заменять элементы списка в любое время и в любом месте.

В LinkedList элементы фактически представляют собой звенья одной цепи. 
У каждого элемента помимо тех данных, которые он хранит, имеется ссылка на предыдущий и следующий элемент. 
По этим ссылкам можно переходить от одного элемента к другому.

HashSet представляет хеш-таблицу. Он наследует свой функционал от класса AbstractSet, а также реализует интерфейс Set.
Хеш-таблица представляет такую структуру данных, в которой все объекты имеют уникальный ключ или хеш-код. 
Данный ключ позволяет уникально идентифицировать объект в таблице.

Класс HashMap использует хеш-таблицу для хранения карточки, обеспечивая быстрое время выполнения запросов get() и put() при больших наборах. 
Класс реализует интерфейс Map (хранение данных в виде пар ключ/значение). 
Ключи и значения могут быть любых типов, в том числе и null. 
При этом все ключи обязательно должны быть уникальны, а значения могут повторяться. 
Ключом в Map может быть любой объект, у которого корректно реализованы методы hashCode() и equals().

3. JPA (Java Persistence API) это спецификация Java EE и Java SE, 
описывающая систему управления сохранением java объектов в таблицы реляционных баз данных в удобном виде. 
Сама Java не содержит реализации JPA, однако есть существует много реализаций данной спецификации от разных компаний (открытых и нет). 
Это не единственный способ сохранения java объектов в базы данных (ORM систем), но один из самых популярных в Java мире.

1. Предоставляет готовые наборы интерфейсов для реализации паттерна репозиторий(crud операции). 
2.   Предоставляет реализацию по умолчанию для каждого метода по его интерфейсу. Поэтому не нужно реализовывать базовые операции чтения или записи.
3.  Автогенерация запросов(query) по имени метода. Например, можно написать метод с названием по шаблону find…By. Для него будет сгенерирован запрос.




